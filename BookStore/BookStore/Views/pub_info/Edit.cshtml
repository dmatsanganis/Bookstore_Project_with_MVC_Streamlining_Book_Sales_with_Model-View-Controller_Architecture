@model BookStore.Models.pub_info

@{
    ViewBag.Title = "Επεξεργασία";
}
@using (Html.BeginForm("Edit", "pub_info", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()



    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.pub_id)

    <div class="container pt-5">
        <div class="row justify-content-center" style="position:sticky; top:auto">
            <a style="padding-right:6px;" href="@Url.Action("/Index")" ; title="Επιστορφή"><img style=" width:24px;  height:24px;" src="/assets/img/return.svg" /></a>

            <h3>Επεξεργασία</h3>

        </div>

        <div class="row justify-content-center text-white" style="background-color: #002b54; border-radius:1em; font-size:18px; padding-left:0px; padding-right:0px">
            <div class="p-2 m-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.logo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @{
                            string imageSrc;
                            if (Model.logo == null)
                            {
                                imageSrc = "";
                            }
                            else
                            {
                                var imageBase64 = Convert.ToBase64String(Model.logo);
                                imageSrc = string.Format("data:image/gif;base64,{0}", imageBase64);
                            }

                            <input type="file" name="imageFile" onchange="previewFile()">
                            <img src="@imageSrc" style="max-width: 250px; max-height: 250px; width: auto; height: auto;" alt="No Image" />
                        }
                        @Html.ValidationMessageFor(model => model.logo, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.logo)
                    </div>


                </div>
            <div class="p-2 m-2">
                <div class="form-group">
                    <label> @Html.LabelFor(model => model.pr_info)</label>
                    @Html.EditorFor(model => model.pr_info, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.pr_info, "", new { @class = "text-danger" })
                </div>


            </div>
            
        </div>

     </div>
        <div class="container d-lg-flex justify-content-end" style=" border-radius: 1em;">
            <div class="p-2 m-2">
                <button id="return" class="btn btn-outline-warning  ladda-button" type="button" ladda="loading " onclick=" location.href='@Url.Action("Index")'">
                    <span class="ladda-label">
                        <span>ΕΠΙΣΤΡOΦΗ</span>
                    </span>
                </button>

                <input type="submit" value="ΑΠΟΘΗΚΕΥΣΗ" class="btn btn-primary ladda-button" style="color:black" />
            </div>
        </div>
    </div>
        

    }


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
